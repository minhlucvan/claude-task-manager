/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, '__esModule', { value: true });

const {
   PrismaClientKnownRequestError,
   PrismaClientUnknownRequestError,
   PrismaClientRustPanicError,
   PrismaClientInitializationError,
   PrismaClientValidationError,
   getPrismaClient,
   sqltag,
   empty,
   join,
   raw,
   skip,
   Decimal,
   Debug,
   objectEnumValues,
   makeStrictEnum,
   Extensions,
   warnOnce,
   defineDmmfProperty,
   Public,
   getRuntime,
   createParam,
} = require('./runtime/library.js');

const Prisma = {};

exports.Prisma = Prisma;
exports.$Enums = {};

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
   client: '6.12.0',
   engine: '8047c96bbd92db98a2abc7c9323ce77c02c89dbc',
};

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError;
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError;
Prisma.PrismaClientInitializationError = PrismaClientInitializationError;
Prisma.PrismaClientValidationError = PrismaClientValidationError;
Prisma.Decimal = Decimal;

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag;
Prisma.empty = empty;
Prisma.join = join;
Prisma.raw = raw;
Prisma.validator = Public.validator;

/**
 * Extensions
 */
Prisma.getExtensionContext = Extensions.getExtensionContext;
Prisma.defineExtension = Extensions.defineExtension;

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull;
Prisma.JsonNull = objectEnumValues.instances.JsonNull;
Prisma.AnyNull = objectEnumValues.instances.AnyNull;

Prisma.NullTypes = {
   DbNull: objectEnumValues.classes.DbNull,
   JsonNull: objectEnumValues.classes.JsonNull,
   AnyNull: objectEnumValues.classes.AnyNull,
};

const path = require('path');

/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
   Serializable: 'Serializable',
});

exports.Prisma.TaskScalarFieldEnum = {
   id: 'id',
   title: 'title',
   description: 'description',
   details: 'details',
   testStrategy: 'testStrategy',
   priority: 'priority',
   status: 'status',
   complexity: 'complexity',
   createdAt: 'createdAt',
   updatedAt: 'updatedAt',
};

exports.Prisma.SubtaskScalarFieldEnum = {
   id: 'id',
   title: 'title',
   description: 'description',
   details: 'details',
   testStrategy: 'testStrategy',
   status: 'status',
   parentId: 'parentId',
   dependencies: 'dependencies',
   createdAt: 'createdAt',
   updatedAt: 'updatedAt',
};

exports.Prisma.TaskDependencyScalarFieldEnum = {
   id: 'id',
   taskId: 'taskId',
   dependsOnId: 'dependsOnId',
   createdAt: 'createdAt',
};

exports.Prisma.TaskMasterMetadataScalarFieldEnum = {
   id: 'id',
   created: 'created',
   updated: 'updated',
   description: 'description',
};

exports.Prisma.SyncOperationScalarFieldEnum = {
   id: 'id',
   type: 'type',
   status: 'status',
   source: 'source',
   timestamp: 'timestamp',
   completedAt: 'completedAt',
   data: 'data',
   rollbackData: 'rollbackData',
   metadata: 'metadata',
   retryCount: 'retryCount',
   maxRetries: 'maxRetries',
   error: 'error',
   taskIds: 'taskIds',
};

exports.Prisma.SyncConflictScalarFieldEnum = {
   id: 'id',
   operationType: 'operationType',
   taskId: 'taskId',
   uiVersion: 'uiVersion',
   cliVersion: 'cliVersion',
   resolved: 'resolved',
   resolution: 'resolution',
   resolvedAt: 'resolvedAt',
   resolvedBy: 'resolvedBy',
   timestamp: 'timestamp',
};

exports.Prisma.SortOrder = {
   asc: 'asc',
   desc: 'desc',
};

exports.Prisma.NullsOrder = {
   first: 'first',
   last: 'last',
};

exports.Prisma.ModelName = {
   Task: 'Task',
   Subtask: 'Subtask',
   TaskDependency: 'TaskDependency',
   TaskMasterMetadata: 'TaskMasterMetadata',
   SyncOperation: 'SyncOperation',
   SyncConflict: 'SyncConflict',
};
/**
 * Create the Client
 */
const config = {
   generator: {
      name: 'client',
      provider: {
         fromEnvVar: null,
         value: 'prisma-client-js',
      },
      output: {
         value: '/Users/minh/Documents/claude-task-master-ui/lib/generated/prisma',
         fromEnvVar: null,
      },
      config: {
         engineType: 'library',
      },
      binaryTargets: [
         {
            fromEnvVar: null,
            value: 'darwin-arm64',
            native: true,
         },
      ],
      previewFeatures: [],
      sourceFilePath: '/Users/minh/Documents/claude-task-master-ui/prisma/schema.prisma',
      isCustomOutput: true,
   },
   relativeEnvPaths: {
      rootEnvPath: null,
      schemaEnvPath: '../../../.env',
   },
   relativePath: '../../../prisma',
   clientVersion: '6.12.0',
   engineVersion: '8047c96bbd92db98a2abc7c9323ce77c02c89dbc',
   datasourceNames: ['db'],
   activeProvider: 'sqlite',
   postinstall: false,
   inlineDatasources: {
      db: {
         url: {
            fromEnvVar: 'DATABASE_URL',
            value: null,
         },
      },
   },
   inlineSchema:
      "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Main Task model matching Task Master structure\nmodel Task {\n  id           Int     @id\n  title        String\n  description  String\n  details      String?\n  testStrategy String?\n  priority     String // 'high', 'medium', 'low'\n  status       String // 'pending', 'in-progress', 'done', 'deferred', 'cancelled', 'blocked'\n  complexity   Int?\n\n  // Relationships\n  subtasks     Subtask[]\n  dependencies TaskDependency[] @relation(\"TaskToDependencies\")\n  dependents   TaskDependency[] @relation(\"DependencyToTasks\")\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"tasks\")\n}\n\n// Subtask model for nested task structure\nmodel Subtask {\n  id           String  @id // Format: \"parentId.subtaskId\" (e.g., \"1.1\", \"1.2\")\n  title        String\n  description  String\n  details      String?\n  testStrategy String?\n  status       String // same status values as Task\n\n  // Parent relationship\n  parentId   Int\n  parentTask Task @relation(fields: [parentId], references: [id], onDelete: Cascade)\n\n  // Subtask dependencies (array stored as JSON)\n  dependencies String @default(\"[]\") // JSON array of subtask IDs\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"subtasks\")\n}\n\n// Task dependency junction table\nmodel TaskDependency {\n  id Int @id @default(autoincrement())\n\n  // The task that depends on another\n  taskId Int\n  task   Task @relation(\"TaskToDependencies\", fields: [taskId], references: [id], onDelete: Cascade)\n\n  // The task that is depended upon\n  dependsOnId Int\n  dependsOn   Task @relation(\"DependencyToTasks\", fields: [dependsOnId], references: [id], onDelete: Cascade)\n\n  // Timestamps\n  createdAt DateTime @default(now())\n\n  @@unique([taskId, dependsOnId])\n  @@map(\"task_dependencies\")\n}\n\n// Task Master metadata model\nmodel TaskMasterMetadata {\n  id          Int      @id @default(autoincrement())\n  created     DateTime\n  updated     DateTime\n  description String\n\n  // Only one metadata record should exist\n  @@map(\"taskmaster_metadata\")\n}\n\n// Sync operation tracking for the sync system\nmodel SyncOperation {\n  id          String    @id @default(cuid())\n  type        String // 'task_update', 'task_create', 'task_delete', 'status_change', 'batch_update', 'file_sync'\n  status      String // 'pending', 'executing', 'completed', 'failed', 'cancelled'\n  source      String // 'ui', 'cli', 'file'\n  timestamp   DateTime  @default(now())\n  completedAt DateTime?\n\n  // Operation data stored as JSON\n  data         String // JSON string containing operation data\n  rollbackData String? // JSON string for rollback data\n  metadata     String? // JSON string for additional metadata\n\n  // Retry and error handling\n  retryCount Int     @default(0)\n  maxRetries Int     @default(3)\n  error      String? // Error message if failed\n\n  // Task relationships (multiple tasks can be affected)\n  taskIds String @default(\"[]\") // JSON array of task IDs\n\n  @@map(\"sync_operations\")\n}\n\n// Sync conflict tracking\nmodel SyncConflict {\n  id            String @id @default(cuid())\n  operationType String // sync operation type that caused conflict\n  taskId        String // task ID involved in conflict\n\n  // Conflict data\n  uiVersion  String // JSON string of UI version\n  cliVersion String // JSON string of CLI/file version\n\n  // Resolution\n  resolved   Boolean   @default(false)\n  resolution String? // 'ui_wins', 'cli_wins', 'last_write_wins', 'merge', 'user_resolve'\n  resolvedAt DateTime?\n  resolvedBy String?\n\n  // Timestamps\n  timestamp DateTime @default(now())\n\n  @@map(\"sync_conflicts\")\n}\n",
   inlineSchemaHash: 'c172562668679cebc0e89c47d7368804fc6968c2c84411c4f393430b82b71bdf',
   copyEngine: true,
};

const fs = require('fs');

config.dirname = __dirname;
if (!fs.existsSync(path.join(__dirname, 'schema.prisma'))) {
   const alternativePaths = ['lib/generated/prisma', 'generated/prisma'];

   const alternativePath =
      alternativePaths.find((altPath) => {
         return fs.existsSync(path.join(process.cwd(), altPath, 'schema.prisma'));
      }) ?? alternativePaths[0];

   config.dirname = path.join(process.cwd(), alternativePath);
   config.isBundled = true;
}

config.runtimeDataModel = JSON.parse(
   '{"models":{"Task":{"dbName":"tasks","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"Int","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"description","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"details","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"testStrategy","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"priority","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"status","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"complexity","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Int","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"subtasks","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Subtask","nativeType":null,"relationName":"SubtaskToTask","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"dependencies","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"TaskDependency","nativeType":null,"relationName":"TaskToDependencies","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"dependents","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"TaskDependency","nativeType":null,"relationName":"DependencyToTasks","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":null,"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":true}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"Subtask":{"dbName":"subtasks","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"description","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"details","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"testStrategy","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"status","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"parentId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"parentTask","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Task","nativeType":null,"relationName":"SubtaskToTask","relationFromFields":["parentId"],"relationToFields":["id"],"relationOnDelete":"Cascade","isGenerated":false,"isUpdatedAt":false},{"name":"dependencies","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"String","nativeType":null,"default":"[]","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":null,"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":true}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"TaskDependency":{"dbName":"task_dependencies","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"taskId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"task","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Task","nativeType":null,"relationName":"TaskToDependencies","relationFromFields":["taskId"],"relationToFields":["id"],"relationOnDelete":"Cascade","isGenerated":false,"isUpdatedAt":false},{"name":"dependsOnId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"dependsOn","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Task","nativeType":null,"relationName":"DependencyToTasks","relationFromFields":["dependsOnId"],"relationToFields":["id"],"relationOnDelete":"Cascade","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":null,"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[["taskId","dependsOnId"]],"uniqueIndexes":[{"name":null,"fields":["taskId","dependsOnId"]}],"isGenerated":false},"TaskMasterMetadata":{"dbName":"taskmaster_metadata","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","nativeType":null,"default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"created","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"updated","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"description","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"SyncOperation":{"dbName":"sync_operations","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"String","nativeType":null,"default":{"name":"cuid","args":[1]},"isGenerated":false,"isUpdatedAt":false},{"name":"type","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"status","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"source","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"timestamp","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":null,"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"completedAt","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"data","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"rollbackData","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"metadata","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"retryCount","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","nativeType":null,"default":0,"isGenerated":false,"isUpdatedAt":false},{"name":"maxRetries","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","nativeType":null,"default":3,"isGenerated":false,"isUpdatedAt":false},{"name":"error","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"taskIds","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"String","nativeType":null,"default":"[]","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"SyncConflict":{"dbName":"sync_conflicts","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"String","nativeType":null,"default":{"name":"cuid","args":[1]},"isGenerated":false,"isUpdatedAt":false},{"name":"operationType","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"taskId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"uiVersion","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"cliVersion","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"resolved","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Boolean","nativeType":null,"default":false,"isGenerated":false,"isUpdatedAt":false},{"name":"resolution","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"resolvedAt","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"resolvedBy","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"timestamp","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":null,"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}},"enums":{},"types":{}}'
);
defineDmmfProperty(exports.Prisma, config.runtimeDataModel);
config.engineWasm = undefined;
config.compilerWasm = undefined;

const { warnEnvConflicts } = require('./runtime/library.js');

warnEnvConflicts({
   rootEnvPath:
      config.relativeEnvPaths.rootEnvPath &&
      path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),
   schemaEnvPath:
      config.relativeEnvPaths.schemaEnvPath &&
      path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath),
});

const PrismaClient = getPrismaClient(config);
exports.PrismaClient = PrismaClient;
Object.assign(exports, Prisma);

// file annotations for bundling tools to include these files
path.join(__dirname, 'libquery_engine-darwin-arm64.dylib.node');
path.join(process.cwd(), 'lib/generated/prisma/libquery_engine-darwin-arm64.dylib.node');
// file annotations for bundling tools to include these files
path.join(__dirname, 'schema.prisma');
path.join(process.cwd(), 'lib/generated/prisma/schema.prisma');
