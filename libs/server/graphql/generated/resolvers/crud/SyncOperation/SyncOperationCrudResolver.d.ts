import type { GraphQLResolveInfo } from "graphql";
import { AggregateSyncOperationArgs } from "./args/AggregateSyncOperationArgs";
import { CreateManyAndReturnSyncOperationArgs } from "./args/CreateManyAndReturnSyncOperationArgs";
import { CreateManySyncOperationArgs } from "./args/CreateManySyncOperationArgs";
import { CreateOneSyncOperationArgs } from "./args/CreateOneSyncOperationArgs";
import { DeleteManySyncOperationArgs } from "./args/DeleteManySyncOperationArgs";
import { DeleteOneSyncOperationArgs } from "./args/DeleteOneSyncOperationArgs";
import { FindFirstSyncOperationArgs } from "./args/FindFirstSyncOperationArgs";
import { FindFirstSyncOperationOrThrowArgs } from "./args/FindFirstSyncOperationOrThrowArgs";
import { FindManySyncOperationArgs } from "./args/FindManySyncOperationArgs";
import { FindUniqueSyncOperationArgs } from "./args/FindUniqueSyncOperationArgs";
import { FindUniqueSyncOperationOrThrowArgs } from "./args/FindUniqueSyncOperationOrThrowArgs";
import { GroupBySyncOperationArgs } from "./args/GroupBySyncOperationArgs";
import { UpdateManySyncOperationArgs } from "./args/UpdateManySyncOperationArgs";
import { UpdateOneSyncOperationArgs } from "./args/UpdateOneSyncOperationArgs";
import { UpsertOneSyncOperationArgs } from "./args/UpsertOneSyncOperationArgs";
import { SyncOperation } from "../../../models/SyncOperation";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateSyncOperation } from "../../outputs/AggregateSyncOperation";
import { CreateManyAndReturnSyncOperation } from "../../outputs/CreateManyAndReturnSyncOperation";
import { SyncOperationGroupBy } from "../../outputs/SyncOperationGroupBy";
export declare class SyncOperationCrudResolver {
    aggregateSyncOperation(ctx: any, info: GraphQLResolveInfo, args: AggregateSyncOperationArgs): Promise<AggregateSyncOperation>;
    createManySyncOperation(ctx: any, info: GraphQLResolveInfo, args: CreateManySyncOperationArgs): Promise<AffectedRowsOutput>;
    createManyAndReturnSyncOperation(ctx: any, info: GraphQLResolveInfo, args: CreateManyAndReturnSyncOperationArgs): Promise<CreateManyAndReturnSyncOperation[]>;
    createOneSyncOperation(ctx: any, info: GraphQLResolveInfo, args: CreateOneSyncOperationArgs): Promise<SyncOperation>;
    deleteManySyncOperation(ctx: any, info: GraphQLResolveInfo, args: DeleteManySyncOperationArgs): Promise<AffectedRowsOutput>;
    deleteOneSyncOperation(ctx: any, info: GraphQLResolveInfo, args: DeleteOneSyncOperationArgs): Promise<SyncOperation | null>;
    findFirstSyncOperation(ctx: any, info: GraphQLResolveInfo, args: FindFirstSyncOperationArgs): Promise<SyncOperation | null>;
    findFirstSyncOperationOrThrow(ctx: any, info: GraphQLResolveInfo, args: FindFirstSyncOperationOrThrowArgs): Promise<SyncOperation | null>;
    syncOperations(ctx: any, info: GraphQLResolveInfo, args: FindManySyncOperationArgs): Promise<SyncOperation[]>;
    syncOperation(ctx: any, info: GraphQLResolveInfo, args: FindUniqueSyncOperationArgs): Promise<SyncOperation | null>;
    getSyncOperation(ctx: any, info: GraphQLResolveInfo, args: FindUniqueSyncOperationOrThrowArgs): Promise<SyncOperation | null>;
    groupBySyncOperation(ctx: any, info: GraphQLResolveInfo, args: GroupBySyncOperationArgs): Promise<SyncOperationGroupBy[]>;
    updateManySyncOperation(ctx: any, info: GraphQLResolveInfo, args: UpdateManySyncOperationArgs): Promise<AffectedRowsOutput>;
    updateOneSyncOperation(ctx: any, info: GraphQLResolveInfo, args: UpdateOneSyncOperationArgs): Promise<SyncOperation | null>;
    upsertOneSyncOperation(ctx: any, info: GraphQLResolveInfo, args: UpsertOneSyncOperationArgs): Promise<SyncOperation>;
}
