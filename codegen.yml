# GraphQL Code Generator Configuration
# Generates TypeScript types from GraphQL schema for Task Master application

overwrite: true
schema: './schema.graphql'

generates:
   # Server-side types
   ./libs/server/types/graphql-generated.ts:
      plugins:
         - 'typescript'
         - 'typescript-resolvers'
      config:
         scalars:
            DateTime: string
            JSON: any
         contextType: '../graphql/context#GraphQLContext'
         useIndexSignature: true
         enumsAsTypes: true
         constEnums: true
         defaultMapper: 'Partial<{T}>'
         mappers:
         maybeValue: 'T | null | undefined'
         inputMaybeValue: 'T | null | undefined'
         skipTypename: false
         nonOptionalTypename: false
         withHooks: false
         withComponent: false
         withHOC: false

   # âœ… Client-side types and hooks
   ./libs/client/graphql-client/generated/index.ts:
      documents:
         - 'libs/client/**/*.{ts,tsx}'
         - 'features/**/graphql/**/*.graphql'
         - '!libs/client/graphql-client/generated/**' # Exclude generated files
      plugins:
         - 'typescript'
         - 'typescript-operations'
         - 'typescript-react-apollo'
      config:
         withHooks: true
         withHOC: false
         withComponent: false
         scalars:
            DateTime: string
            JSON: any

hooks:
   afterAllFileWrite:
      - prettier --write

config:
   scalars:
      DateTime:
         input: string
         output: string
      JSON:
         input: any
         output: any
